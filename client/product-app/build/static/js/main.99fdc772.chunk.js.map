{"version":3,"sources":["context/ProductListContext.tsx","context/CartContext.tsx","components/Product/Product.tsx","components/ProductList/ProductList.tsx","components/Nav/Nav.tsx","components/Cart/Cart.tsx","components/Pagination/Pagination.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ProductListContext","createContext","ProductProvider","children","useState","count","rows","products","setProducts","useEffect","a","axios","get","response","data","Provider","value","CartContext","CartProvider","cart","setCart","Product","name","description","varieties","id","useContext","quantity","setQuantity","disabledAddToCart","setDisabledAddToCart","image","forEach","variety","images","className","map","i","color","price","toString","src","alt","onClick","prev","disabled","order","productName","Number","addToCart","ProductList","product","product_name","product_description","JSON","parse","product_varieties","Nav","props","closeCheckoutBox","to","length","Cart","checkOut","setCheckOut","total","setTotal","item","cost","href","Pagination","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.99fdc772.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { createContext, ReactNode, useEffect, useState } from \"react\";\r\n\r\nexport const ProductListContext = createContext<any[]>([]);\r\n\r\nexport const ProductProvider = ({ children }: { children: ReactNode }) => {\r\n  const [products, setProducts] = useState({\r\n    count: 0,\r\n    rows: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await axios.get(\"api/products\");\r\n      setProducts({\r\n        count: response.data.count,\r\n        rows: response.data.rows,\r\n      });\r\n    })();\r\n  }, []);\r\n  return (\r\n    <ProductListContext.Provider value={[products, setProducts]}>\r\n      {children}\r\n    </ProductListContext.Provider>\r\n  );\r\n};\r\n","import { createContext, ReactNode, useState } from \"react\";\r\n\r\nexport const CartContext = createContext<any[]>([]);\r\n\r\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import { IProductVarieties } from \"../../contracts\";\r\nimport \"./Product.css\";\r\nimport { useContext, useState } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\ninterface IProduct {\r\n  name: string;\r\n  description: string;\r\n  id: number;\r\n  varieties: IProductVarieties[];\r\n}\r\nconst Product = ({ name, description, id, varieties }: IProduct) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [disabledAddToCart, setDisabledAddToCart] = useState(false);\r\n\r\n  const addToCart = (id: number) => {\r\n    const order = {\r\n      price: 0,\r\n      color: \"\",\r\n      image: \"\",\r\n      productName: \"\",\r\n      quantity,\r\n    };\r\n    order[\"productName\"] = name;\r\n    varieties.forEach((variety) => {\r\n      order[\"price\"] = Number(variety.price);\r\n      order[\"color\"] = variety.color;\r\n      order[\"image\"] = variety.images[0];\r\n    });\r\n    setCart((prev: IProduct[]) => [...prev, order]);\r\n    setDisabledAddToCart(true);\r\n  };\r\n  const increaseQuantity = () => {\r\n    setQuantity((prev) => prev + 1);\r\n  };\r\n  const decreaseQuantity = () => {\r\n    if (quantity > 1) {\r\n      setQuantity((prev) => prev - 1);\r\n    }\r\n  };\r\n  let image = \"\";\r\n  varieties.forEach((variety) => {\r\n    image += variety.images[0];\r\n  });\r\n\r\n  return (\r\n    <div className=\"product-container\">\r\n      <div className=\"product-details\">\r\n        <p>\r\n          <b>Product Name: </b>\r\n          {name}\r\n        </p>\r\n\r\n        <p>\r\n          <b>Description: </b>\r\n          {description}\r\n        </p>\r\n        {varieties.map((variety, i) => (\r\n          <div key={i.toString()}>\r\n            <p>\r\n              <b>Color: </b>\r\n              {variety.color}\r\n            </p>\r\n            <p>\r\n              <b>Price: $</b>\r\n              {variety.price}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <img src={image} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <div className=\"product-control-container\">\r\n          <h3 className=\"qt-text\">Select quantity</h3>\r\n          <div className=\"product-control\">\r\n            <button\r\n              className=\"qt-minus btn btn-secondary\"\r\n              onClick={decreaseQuantity}\r\n            >\r\n              -\r\n            </button>\r\n            <p className=\"qt\">{quantity}</p>\r\n            <button\r\n              className=\"qt-plus btn btn-secondary\"\r\n              onClick={increaseQuantity}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className=\"add-to-cart-button\">\r\n            <button\r\n              disabled={disabledAddToCart}\r\n              onClick={() => addToCart(id)}\r\n              className=\"btn btn-success mt-4 \"\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { useContext } from \"react\";\r\nimport { ProductListContext } from \"../../context/ProductListContext\";\r\nimport { IProductAttributes } from \"../../contracts\";\r\nimport Product from \"../Product/Product\";\r\n\r\nimport \"./ProductList.css\";\r\n\r\nfunction ProductList() {\r\n  const [products] = useContext(ProductListContext);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {products.rows.map((product: IProductAttributes) => (\r\n        <div key={product.id}>\r\n          <Product\r\n            name={product.product_name}\r\n            description={product.product_description}\r\n            id={product.id}\r\n            varieties={JSON.parse(product.product_varieties)}\r\n            key={product.id}\r\n          />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport \"./Nav.css\";\r\ninterface NavProps {\r\n  closeCheckoutBox: () => void;\r\n}\r\nconst Nav = (props: NavProps) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"brand\">Avios</div>\r\n      <div>\r\n        <ul className=\"navbar-right\" onClick={props.closeCheckoutBox}>\r\n          <li>\r\n            <Link to=\"#\">\r\n              <i className=\"fas fa-shopping-cart\"></i>{\" \"}\r\n              <span className=\"cart-brand\">Cart </span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <div className=\"badge\">{cart.length}</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport \"./Cart.css\";\r\nexport const Cart = () => {\r\n  const [checkOut, setCheckOut] = useState(\"display-checkout\");\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const closeCheckoutBox = () => {\r\n    if (checkOut === \"display-checkout\") {\r\n      setCheckOut(\"\");\r\n    } else {\r\n      setCheckOut(\"display-checkout\");\r\n    }\r\n  };\r\n  interface ICart {\r\n    productName: string;\r\n    price: number;\r\n    image: string;\r\n    color: string;\r\n    quantity: number;\r\n  }\r\n  useEffect(() => {\r\n    let price = 0;\r\n    cart.forEach((item: ICart) => {\r\n      const cost = item.price * item.quantity;\r\n      price += cost;\r\n    });\r\n    setTotal(price);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cart-container\">\r\n        <Nav closeCheckoutBox={closeCheckoutBox} />\r\n        <div className={`cart-control ${checkOut}`}>\r\n          <div className=\"shopping-cart\">\r\n            <div className=\"shopping-cart-header\">\r\n              <div className=\"shopping-cart-header-content-left\">\r\n                <i className=\"fa fa-shopping-cart cart-icon\"></i>\r\n                <span className=\"badge\">{cart.length}</span>\r\n              </div>\r\n              <div className=\"shopping-cart-total\">\r\n                <span className=\"lighter-text\">Total:</span>\r\n                <span className=\"main-color-text\">${total}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <ul className=\"shopping-cart-items\">\r\n              <li className=\"clearfix\">\r\n                {cart.length ? (\r\n                  cart.map((item: ICart, id: number) => (\r\n                    <div key={id} className=\"shopping-cart-item\">\r\n                      <img\r\n                        className=\"shopping-cart-item-image\"\r\n                        src={item.image}\r\n                        alt=\"item1\"\r\n                      />\r\n                      <div className=\"shopping-cart-item-details\">\r\n                        <span className=\"item-name\">{item.productName}</span>\r\n                        <span className=\"item-price\">${item.price}</span>\r\n                        <span className=\"item-quantity\">\r\n                          Quantity: {item.quantity}{\" \"}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"shopping-cart-item-details-empty\">\r\n                    <p>Cart is Empty</p>\r\n                    <i className=\"fa fa-shopping-cart cart-icon\"></i>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            </ul>\r\n\r\n            <a href=\"www.goo\" className=\"button\">\r\n              Checkout\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { ProductListContext } from \"../../context/ProductListContext\";\r\nimport \"./Pagination.css\";\r\nconst Pagination = () => {\r\n  const [products,setProducts] = useContext(ProductListContext)\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item disabled\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              Previous\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              1\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item active\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              2 <span className=\"sr-only\">(current)</span>\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              3\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              {products.count}\r\n            </a>\r\n          </li>\r\n          <li className=\"page-item\">\r\n            <a className=\"page-link\" href=\"ww\">\r\n              Next\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"./App.css\";\nimport ProductList from \"./components/ProductList/ProductList\";\nimport { ProductProvider } from \"./context/ProductListContext\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CartProvider } from \"./context/CartContext\";\nimport { Cart } from \"./components/Cart/Cart\";\nimport Pagination from \"./components/Pagination/Pagination\";\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <CartProvider>\n          <Cart />\n          <Route exact path=\"/\">\n            <ProductProvider>\n              <ProductList />\n              <Pagination />\n            </ProductProvider>\n          </Route>\n        </CartProvider>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}