{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Product/Product.tsx","components/ProductList/ProductList.tsx"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","Object","from","unsupportedIterableToArray","TypeError","Product","name","description","id","varieties","useContext","CartContext","setCart","useState","quantity","setQuantity","disabledAddToCart","setDisabledAddToCart","randomImage","setRandomImage","useEffect","forEach","variety","i","randomIndex","Math","floor","random","images","length","className","map","color","price","toString","src","alt","onClick","prev","disabled","order","image","productName","Number","addToCart","ProductList","ProductListContext","products","loading","Spinner","rows","product","product_name","product_description","JSON","parse","product_varieties"],"mappings":"gNAIe,SAASA,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,OAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAA0BA,OAAOC,YAAYC,OAAOH,GAAO,OAAOH,MAAMO,KAAKJ,GFIvD,CAAgBJ,IAAQ,OAAAS,EAAA,GAA2BT,IGLvE,WACb,MAAM,IAAIU,UAAU,wIHIwE,G,yBI4G/EC,EAvGC,SAAC,GAAoD,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,GAAIC,EAA0B,EAA1BA,UACxC,EAAwBC,qBAAWC,KAAnC,mBAAaC,GAAb,WACA,EAAgCC,mBAAS,GAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRX,EAAUY,SAAQ,SAACC,EAASC,GAC1B,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWL,EAAQM,OAAOC,QAC9DV,EAAeG,EAAQM,OAAOJ,SAE/B,CAACf,IA8BJ,OACE,sBAAKqB,UAAU,oBAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAGA,UAAU,eAAb,UACE,+CACCxB,KAGH,oBAAGwB,UAAU,sBAAb,UACE,8CACCvB,KAEFE,EAAUsB,KAAI,SAACT,EAASC,GAAV,OACb,gCACE,8BACE,wCACCD,EAAQU,SAEX,8BACE,yCACCV,EAAQW,WAPHV,EAAEW,kBAahB,8BACE,qBAAKC,IAAKjB,EAAakB,IAAI,OAE7B,8BACE,sBAAKN,UAAU,4BAAf,UACE,oBAAIA,UAAU,UAAd,6BACA,sBAAKA,UAAU,kBAAf,UACE,wBACEA,UAAU,6BACVO,QAzCa,WACnBvB,EAAW,GACbC,GAAY,SAACuB,GAAD,OAAUA,EAAO,MAqCvB,eAMA,mBAAGR,UAAU,KAAb,SAAmBhB,IACnB,wBACEgB,UAAU,4BACVO,QAnDa,WACvBtB,GAAY,SAACuB,GAAD,OAAUA,EAAO,MAgDrB,kBAOF,qBAAKR,UAAU,qBAAf,SACE,wBACES,SAAUvB,EACVqB,QAAS,kBA/EH,SAAC7B,GACjB,IAAMgC,EAAQ,CACZhC,GAAI,EACJyB,MAAO,EACPD,MAAO,GACPS,MAAO,GACPC,YAAa,GACb5B,YAEF0B,EAAK,YAAkBlC,EACvBkC,EAAK,GAAShC,EAEdC,EAAUY,SAAQ,SAACC,GACjBkB,EAAK,MAAYG,OAAOrB,EAAQW,OAChCO,EAAK,MAAYlB,EAAQU,MACzBQ,EAAK,MAAYlB,EAAQM,OAAO,MAElChB,GAAQ,SAAC0B,GAAD,kBAA0BA,GAA1B,CAAgCE,OACxCvB,GAAqB,GA6DI2B,CAAUpC,IACzBsB,UAAU,0BAHZ,oC,cCpEGe,UAvBf,WAAwB,IAAD,EACrB,EAAgCnC,qBAAWoC,KAA3C,mBAAOC,EAAP,KACA,OADA,KAEE,qBAAKjB,UAAU,yBAAf,SACGiB,EAASC,QACR,cAACC,EAAA,EAAD,IADD,UAGCF,EAASG,YAHV,aAGC,EAAenB,KAAI,SAACoB,GAAD,OACjB,8BACE,cAAC,EAAD,CACE7C,KAAM6C,EAAQC,aACd7C,YAAa4C,EAAQE,oBACrB7C,GAAI2C,EAAQ3C,GACZC,UAAW6C,KAAKC,MAAMJ,EAAQK,oBACzBL,EAAQ3C,KANP2C,EAAQ3C","file":"static/js/3.8aac11fb.chunk.js","sourcesContent":["import arrayWithoutHoles from \"@babel/runtime/helpers/esm/arrayWithoutHoles\";\nimport iterableToArray from \"@babel/runtime/helpers/esm/iterableToArray\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableSpread from \"@babel/runtime/helpers/esm/nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"@babel/runtime/helpers/esm/arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { IProductVarieties } from \"../../contracts\";\r\nimport \"./Product.css\";\r\nimport { useContext, useEffect, useState } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\ninterface IProduct {\r\n  name: string;\r\n  description: string;\r\n  id: number;\r\n  varieties: IProductVarieties[];\r\n}\r\nconst Product = ({ name, description, id, varieties }: IProduct) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [disabledAddToCart, setDisabledAddToCart] = useState(false);\r\n  const [randomImage, setRandomImage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    varieties.forEach((variety, i) => {\r\n      const randomIndex = Math.floor(Math.random() * variety.images.length);\r\n      setRandomImage(variety.images[randomIndex]);\r\n    });\r\n  }, [varieties]);\r\n  const addToCart = (id: number) => {\r\n    const order = {\r\n      id: 0,\r\n      price: 0,\r\n      color: \"\",\r\n      image: \"\",\r\n      productName: \"\",\r\n      quantity,\r\n    };\r\n    order[\"productName\"] = name;\r\n    order[\"id\"] = id;\r\n\r\n    varieties.forEach((variety) => {\r\n      order[\"price\"] = Number(variety.price);\r\n      order[\"color\"] = variety.color;\r\n      order[\"image\"] = variety.images[0];\r\n    });\r\n    setCart((prev: IProduct[]) => [...prev, order]);\r\n    setDisabledAddToCart(true);\r\n  };\r\n  const increaseQuantity = () => {\r\n    setQuantity((prev) => prev + 1);\r\n  };\r\n  const decreaseQuantity = () => {\r\n    if (quantity > 1) {\r\n      setQuantity((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"product-container\">\r\n      <div className=\"product-details\">\r\n        <p className=\"product-name\">\r\n          <b>Product Name: </b>\r\n          {name}\r\n        </p>\r\n\r\n        <p className=\"product-description\">\r\n          <b>Description: </b>\r\n          {description}\r\n        </p>\r\n        {varieties.map((variety, i) => (\r\n          <div key={i.toString()}>\r\n            <p>\r\n              <b>Color: </b>\r\n              {variety.color}\r\n            </p>\r\n            <p>\r\n              <b>Price: $</b>\r\n              {variety.price}\r\n            </p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div>\r\n        <img src={randomImage} alt=\"\" />\r\n      </div>\r\n      <div>\r\n        <div className=\"product-control-container\">\r\n          <h3 className=\"qt-text\">Select quantity</h3>\r\n          <div className=\"product-control\">\r\n            <button\r\n              className=\"qt-minus btn btn-secondary\"\r\n              onClick={decreaseQuantity}\r\n            >\r\n              -\r\n            </button>\r\n            <p className=\"qt\">{quantity}</p>\r\n            <button\r\n              className=\"qt-plus btn btn-secondary\"\r\n              onClick={increaseQuantity}\r\n            >\r\n              +\r\n            </button>\r\n          </div>\r\n          <div className=\"add-to-cart-button\">\r\n            <button\r\n              disabled={disabledAddToCart}\r\n              onClick={() => addToCart(id)}\r\n              className=\"btn btn-secondary mt-4 \"\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import { useContext } from \"react\";\r\nimport { ProductListContext } from \"../../context/ProductListContext\";\r\nimport { IProductAttributes } from \"../../contracts\";\r\nimport Product from \"../Product/Product\";\r\nimport Spinner from \"../Spinners/Spinner\";\r\n\r\nimport \"./ProductList.css\";\r\n\r\nfunction ProductList() {\r\n  const [products, setProducts] = useContext(ProductListContext);\r\n  return (\r\n    <div className=\"product-list-container\">\r\n      {products.loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        products.rows?.map((product: IProductAttributes) => (\r\n          <div key={product.id}>\r\n            <Product\r\n              name={product.product_name}\r\n              description={product.product_description}\r\n              id={product.id}\r\n              varieties={JSON.parse(product.product_varieties)}\r\n              key={product.id}\r\n            />\r\n          </div>\r\n        ))\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n"],"sourceRoot":""}