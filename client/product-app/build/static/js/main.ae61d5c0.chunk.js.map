{"version":3,"sources":["context/CartContext.tsx","context/ProductListContext.tsx","api/index.ts","components/Spinners/Spinner.tsx","components/Nav/Nav.tsx","components/Cart/Cart.tsx","components/Pagination/Pagination.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["CartContext","createContext","CartProvider","children","useState","cart","setCart","Provider","value","ProductListContext","ProductProvider","count","rows","loading","products","setProducts","useEffect","a","fetchProducts","response","data","perPage","pageNumber","axios","get","override","css","LoaderContainer","styled","div","Header","h2","Spinner","className","size","color","Nav","props","useContext","onClick","closeCheckoutBox","to","length","dotenv","config","Cart","checkOut","setCheckOut","total","setTotal","public_key","process","tx_ref","Date","now","toString","amount","currency","payment_options","customer","email","phonenumber","name","customizations","title","description","logo","handleFlutterPayment","useFlutterwave","checkout","map","item","id","quantity","price","productName","console","log","callback","closePaymentModal","onClose","forEach","cost","src","image","alt","Pagination","currentPage","setCurrentPage","String","prev","App","ProductList","lazy","fallback","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae61d5c0.chunk.js","sourcesContent":["import { createContext, ReactNode, useState } from \"react\";\r\n\r\nexport const CartContext = createContext<any[]>([]);\r\n\r\nexport const CartProvider = ({ children }: { children: ReactNode }) => {\r\n  const [cart, setCart] = useState([]);\r\n\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import { createContext, ReactNode, useEffect, useState } from \"react\";\r\nimport { fetchProducts } from \"../api\";\r\n\r\nexport const ProductListContext = createContext<any[]>([]);\r\n\r\nexport const ProductProvider = ({ children }: { children: ReactNode }) => {\r\n  const [products, setProducts] = useState({\r\n    count: 0,\r\n    rows: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    (async function () {\r\n      const response = await fetchProducts(\"5\", \"1\");\r\n      setProducts({\r\n        count: response.data.count,\r\n        rows: response.data.rows,\r\n        loading: false,\r\n      });\r\n    })();\r\n  }, []);\r\n  return (\r\n    <ProductListContext.Provider value={[products, setProducts]}>\r\n      {children}\r\n    </ProductListContext.Provider>\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const fetchProducts = async (perPage: string, pageNumber: string) => {\r\n  const response = await axios.get(`api/products?perPage=${perPage}&pageNumber=${pageNumber}`);\r\n  return response;\r\n};\r\n","import { css } from \"@emotion/react\";\r\nimport RingLoader from \"react-spinners/RingLoader\";\r\nimport styled from \"styled-components\";\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst LoaderContainer = styled.div`\r\n  display: flex;\r\n  flex-flow: column nowrap;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background: white;\r\n`;\r\n\r\nconst Header = styled.h2`\r\n  color: #003883;\r\n`;\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <LoaderContainer className=\"sweet-loading\">\r\n      <Header>Avios</Header>\r\n\r\n      <RingLoader css={override} size={150} color={\"#003883\"} loading={true} />\r\n      <Header>Loading .....</Header>\r\n    </LoaderContainer>\r\n  );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport \"./Nav.css\";\r\ninterface NavProps {\r\n  closeCheckoutBox: () => void;\r\n}\r\nconst Nav = (props: NavProps) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n  return (\r\n    <div className=\"nav-container\">\r\n      <div className=\"brand\">Avios</div>\r\n      <div>\r\n        <ul className=\"navbar-right\" onClick={props.closeCheckoutBox}>\r\n          <li>\r\n            <Link to=\"#\">\r\n              <i className=\"fas fa-shopping-cart\"></i>{\" \"}\r\n              <span className=\"cart-brand\">Cart </span>\r\n            </Link>\r\n          </li>\r\n          <li>\r\n            <div className=\"badge\">{cart.length}</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { CartContext } from \"../../context/CartContext\";\r\nimport Nav from \"../Nav/Nav\";\r\nimport \"./Cart.css\";\r\nimport { useFlutterwave, closePaymentModal } from \"flutterwave-react-v3\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n\r\n\r\nexport const Cart = () => {\r\n  const [checkOut, setCheckOut] = useState(\"display-checkout\");\r\n  const [cart, setCart] = useContext(CartContext);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  const config = {\r\n    public_key: `${process.env.REACT_APP_KEY_FLUTTERWAVE}`,\r\n    tx_ref: Date.now().toString(),\r\n    amount: total,\r\n    currency: \"USD\",\r\n    payment_options: \"card,mobilemoney,ussd\",\r\n    customer: {\r\n      email: \"user@gmail.com\",\r\n      phonenumber: \"07064586146\",\r\n      name: \"joel ugwumadu\",\r\n    },\r\n    customizations: {\r\n      title: \"Payment\",\r\n      description: \"Payment for items in cart\",\r\n      logo: \"https://st2.depositphotos.com/4403291/7418/v/450/depositphotos_74189661-stock-illustration-online-shop-log.jpg\",\r\n    },\r\n  };\r\n  const handleFlutterPayment = useFlutterwave(config);\r\n\r\n  const closeCheckoutBox = () => {\r\n    if (checkOut === \"display-checkout\") {\r\n      setCheckOut(\"\");\r\n    } else {\r\n      setCheckOut(\"display-checkout\");\r\n    }\r\n  };\r\n  interface ICart {\r\n    id: number;\r\n    productName: string;\r\n    price: number;\r\n    image: string;\r\n    color: string;\r\n    quantity: number;\r\n  }\r\n  const checkout = async () => {\r\n    const data = cart.map((item: ICart) => {\r\n      return {\r\n        id: item.id,\r\n        quantity: item.quantity,\r\n        price: item.price,\r\n        productName:item.productName,\r\n      };\r\n    });\r\n    console.log(data);\r\n    handleFlutterPayment({\r\n        callback: (response) => {\r\n          console.log(response);\r\n          closePaymentModal(); // this will close the modal programmatically\r\n        },\r\n        onClose: () => {},\r\n      });\r\n    \r\n\r\n  };\r\n  useEffect(() => {\r\n    let price = 0;\r\n    cart.forEach((item: ICart) => {\r\n      const cost = item.price * item.quantity;\r\n      price += cost;\r\n    });\r\n    setTotal(price);\r\n  }, [cart]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"cart-container\">\r\n        <Nav closeCheckoutBox={closeCheckoutBox} />\r\n        <div className={`cart-control ${checkOut}`}>\r\n          <div className=\"shopping-cart\">\r\n            <div className=\"shopping-cart-header\">\r\n              <div className=\"shopping-cart-header-content-left\">\r\n                <i className=\"fa fa-shopping-cart cart-icon\"></i>\r\n                <span className=\"badge\">{cart.length}</span>\r\n              </div>\r\n              <div className=\"shopping-cart-total\">\r\n                <span className=\"lighter-text\">Total:</span>\r\n                <span className=\"main-color-text\">${total}</span>\r\n              </div>\r\n            </div>\r\n\r\n            <ul className=\"shopping-cart-items\">\r\n              <li className=\"clearfix\">\r\n                {cart.length ? (\r\n                  cart.map((item: ICart, id: number) => (\r\n                    <div key={id} className=\"shopping-cart-item\">\r\n                      <img\r\n                        className=\"shopping-cart-item-image\"\r\n                        src={item.image}\r\n                        alt=\"item1\"\r\n                      />\r\n                      <div className=\"shopping-cart-item-details\">\r\n                        <span className=\"item-name\">{item.productName}</span>\r\n                        <span className=\"item-price\">${item.price}</span>\r\n                        <span className=\"item-quantity\">\r\n                          Quantity: {item.quantity}{\" \"}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"shopping-cart-item-details-empty\">\r\n                    <p>Cart is Empty</p>\r\n                    <i className=\"fa fa-shopping-cart cart-icon\"></i>\r\n                  </div>\r\n                )}\r\n              </li>\r\n            </ul>\r\n\r\n            <button className=\"button\" onClick={() => checkout()}>\r\n              Checkout\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { useContext, useEffect, useState } from \"react\";\r\nimport { fetchProducts } from \"../../api\";\r\nimport { ProductListContext } from \"../../context/ProductListContext\";\r\nimport \"./Pagination.css\";\r\nconst Pagination = () => {\r\n  const [products, setProducts] = useContext(ProductListContext);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  useEffect(() => {\r\n    (async function () {\r\n      setProducts({ loading: true });\r\n      const response = await fetchProducts(\"5\", String(currentPage));\r\n      setProducts({\r\n        count: response.data.count,\r\n        rows: response.data.rows,\r\n        loading: false,\r\n      });\r\n    })();\r\n  }, [currentPage, setProducts]);\r\n  const nextPage = () => {\r\n    setCurrentPage((prev) => prev + 1);\r\n  };\r\n\r\n  const previousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage((prev) => prev - 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"pagination-container\">\r\n      <nav aria-label=\"...\">\r\n        <ul className=\"pagination\">\r\n          <li className=\"page-item\">\r\n            <button className=\"page-link\" onClick={() => previousPage()}>\r\n              Previous\r\n            </button>\r\n          </li>\r\n          <li className=\"page-item disabled\">\r\n            <button className=\"page-link\">{currentPage}</button>\r\n          </li>\r\n\r\n          <li className=\"page-item\">\r\n            <button className=\"page-link\" onClick={() => nextPage()}>\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { CartProvider } from \"./context/CartContext\";\nimport { Cart } from \"./components/Cart/Cart\";\nimport Pagination from \"./components/Pagination/Pagination\";\nimport { lazy, Suspense } from \"react\";\nimport { ProductProvider } from \"./context/ProductListContext\";\nimport Spinner from \"./components/Spinners/Spinner\";\nimport Marquee from \"react-fast-marquee\";\n\nfunction App() {\n\n  const ProductList = lazy(() => import(\"./components/ProductList/ProductList\"));\n  \n  return (\n    <div>\n      <CartProvider>\n        <ProductProvider>\n          <Router>\n            <Cart />\n            <div className=\"marquee\">\n              <Marquee>Coming Soon!!!</Marquee>\n            </div>\n            <Suspense fallback={<Spinner />}>\n              <Route exact path=\"/\">\n                <ProductList />\n                <Pagination />\n              </Route>\n            </Suspense>\n          </Router>\n        </ProductProvider>\n      </CartProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}